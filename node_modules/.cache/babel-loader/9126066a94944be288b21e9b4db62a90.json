{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { removeLoadingState, sortObjectItem } from \"../../../helpers/supportFunctions\";\nimport { GET_ITEM_LIST_DATA_ASYNC_ACTION } from \"../actions/itemList\";\n//Create a reusable userList default payload\nexport const userListDefaultPayload = {\n  total_count: 0,\n  incomplete_results: false,\n  items: null\n};\nexport const initialState = {\n  searchQuery: '',\n  userList: userListDefaultPayload,\n  loading: [],\n  per_page: 9,\n  page: 1,\n  current_sort: {\n    key: 'login',\n    order: 'asc',\n    type: 'object'\n  }\n};\nexport const itemListSlice = createSlice({\n  name: 'itemList',\n  initialState,\n  reducers: {\n    setUserList: (state, action) => {\n      state.userList.items = action.payload;\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n    setCurrentSort: (state, action) => {\n      state.current_sort = action.payload;\n    },\n    resetUserList: state => {\n      //Format the userlist state to default state\n      state.userList = userListDefaultPayload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(GET_ITEM_LIST_DATA_ASYNC_ACTION.pending, state => {\n      state.loading = ['GET_ITEM_LIST_DATA'];\n    }).addCase(GET_ITEM_LIST_DATA_ASYNC_ACTION.fulfilled, (state, action) => {\n      state.loading = removeLoadingState(state.loading, 'GET_ITEM_LIST_DATA');\n\n      if (action.payload.status === 200) {\n        //Sort payload with selected column by user\n        action.payload.data.items.sort(sortObjectItem(state.current_sort.key, state.current_sort.order, state.current_sort.type));\n        state.userList = action.payload.data;\n        state.page = action.payload.page;\n      }\n\n      ;\n    });\n  }\n}); // Selectors\n\nexport const selectUserList = state => state.userList; // Reducers and actions\n\nexport const {\n  setItemList,\n  resetItemList,\n  setSearchQuery,\n  setPage,\n  setCurrentSort\n} = itemListSlice.actions;\nexport default itemListSlice.reducer;","map":{"version":3,"sources":["/Users/mac/Documents/junicodes/test/2021-senior-frontend-developer-mlybfy/src/react-wrapper/redux/slices/itemListSlice.ts"],"names":["createSlice","removeLoadingState","sortObjectItem","GET_ITEM_LIST_DATA_ASYNC_ACTION","userListDefaultPayload","total_count","incomplete_results","items","initialState","searchQuery","userList","loading","per_page","page","current_sort","key","order","type","itemListSlice","name","reducers","setUserList","state","action","payload","setSearchQuery","setPage","setCurrentSort","resetUserList","extraReducers","builder","addCase","pending","fulfilled","status","data","sort","selectUserList","setItemList","resetItemList","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { removeLoadingState, sortObjectItem} from \"../../../helpers/supportFunctions\";\nimport { GET_ITEM_LIST_DATA_ASYNC_ACTION } from \"../actions/itemList\";\nimport { RootState } from \"../store\";\n\n\nexport interface UserListPayloadState {\n  total_count: number,\n  incomplete_results: boolean,\n  items: object[] | null\n}\n\nexport interface UserListState {\n  searchQuery: string,\n  userList: {\n    total_count: number,\n    incomplete_results: boolean,\n    items: object[] | null\n  },\n  loading: string[]\n  per_page: number,\n  page: number\n  current_sort: {\n    key: string,\n    order: string\n    type: string\n  }\n}\n\n//Create a reusable userList default payload\nexport const userListDefaultPayload = {\n  total_count: 0,\n  incomplete_results: false,\n  items: null\n}\n\nexport const initialState = {\n  searchQuery: '',\n  userList: userListDefaultPayload,\n  loading: [],\n  per_page: 9,\n  page: 1,\n  current_sort: {key: 'login', order: 'asc', type: 'object'}\n} as UserListState;\n\n\nexport const itemListSlice = createSlice({\n  name: 'itemList',\n  initialState,\n  \n  reducers: {\n    setUserList: (state, action: PayloadAction<object[]>) => {\n      state.userList.items = action.payload;\n    },\n\n    setSearchQuery: (state, action: PayloadAction<string>) => {\n      state.searchQuery = action.payload;\n    },\n\n    setPage: (state, action: PayloadAction<number>) => {\n      state.page = action.payload;\n    },\n\n    setCurrentSort: (state, action: PayloadAction<{ key: string, order: string, type: string}>) => {\n      state.current_sort = action.payload;\n    },\n\n\n    resetUserList: (state) => {\n      //Format the userlist state to default state\n      state.userList = userListDefaultPayload as UserListPayloadState;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder\n    .addCase(GET_ITEM_LIST_DATA_ASYNC_ACTION.pending, (state) => {\n      state.loading = ['GET_ITEM_LIST_DATA'];\n    })\n    .addCase(GET_ITEM_LIST_DATA_ASYNC_ACTION.fulfilled, (state, action) => {\n      state.loading = removeLoadingState(state.loading, 'GET_ITEM_LIST_DATA')\n\n      if( action.payload.status === 200 ) {\n        //Sort payload with selected column by user\n        action.payload.data.items.sort(sortObjectItem(state.current_sort.key, state.current_sort.order, state.current_sort.type));\n        state.userList = action.payload.data\n        state.page = action.payload.page;\n      };\n\n    });\n  }\n\n});\n\n// Selectors\nexport const selectUserList = (state: RootState) => state.userList;\n\n// Reducers and actions\nexport const { setItemList, resetItemList, setSearchQuery, setPage, setCurrentSort} = itemListSlice.actions;\n\nexport default itemListSlice.reducer;"]},"metadata":{},"sourceType":"module"}